FROM alpine:latest

# App Path
ARG APP_PATH="/opt/app"

# Define venv Path
ARG VENV_PATH="/opt/venv"

# Create Directory for App
RUN mkdir -p "${APP_PATH}"

# Copy Sources
COPY app/ "${APP_PATH}"

# Copy other Files
COPY README.md "${APP_PATH}"

# Change Directory
WORKDIR "${APP_PATH}"

# Update Sources
# Install required Packages
RUN --mount=type=cache,mode=0777,target=/var/cache/apk,sharing=locked \
    --mount=type=cache,mode=0777,target=/var/lib/apk,sharing=locked \
    apk update && \
    apk add python3 py3-pip git shadow && \
    apk add bash iproute2

# Not Currently Enabled Packages
#RUN --mount=type=cache,mode=0777,target=/var/cache/apk,sharing=locked \
#    --mount=type=cache,mode=0777,target=/var/lib/apk,sharing=locked \
#    apk update && \
#    apk add rrdtool

# Change Shell
RUN chsh -s /bin/bash root
RUN export SHELL="/bin/bash"
RUN ln -sf /bin/bash /bin/sh

# set ENV to execute startup scripts
ENV ENV /etc/profile

# Create venv
RUN python3 -m venv "${VENV_PATH}"

# Set PATH Variable to include venv
ENV PATH="${VENV_PATH}/bin:$PATH"

# Activate venv
RUN source "${VENV_PATH}/bin/activate"
#RUN sh -c ". ${VENV_PATH}/bin/activate"

# Install required Packages
RUN --mount=type=cache,mode=0777,target=/var/lib/pip,sharing=locked \
    pip install --cache-dir /var/lib/pip -r "${APP_PATH}/requirements.txt"

# Export Web Port
EXPOSE 5000

# Run the Main App
#CMD ["python", "-u", "app.py"]

# Copy and Execute Script for Installation and Initialization of App 
COPY docker-entrypoint.sh /opt/
RUN chmod +x /opt/docker-entrypoint.sh
ENTRYPOINT ["/opt/docker-entrypoint.sh"]
