# This does NOT appear to work
# podman-compose and podman complain with the following error
# Most likely the backend needs to be changed to cni insteaad of netavark
# See here: https://github.com/containers/podman-compose/issues/500#issuecomment-1238641494
#error: Found argument '--plugin-directory' which wasn't expected, or isn't valid in this context
#
#	If you tried to supply `--plugin-directory` as a value rather than a flag, use `-- --plugin-directory`
#
#USAGE:
#    netavark --config <CONFIG> --rootless <ROOTLESS> --aardvark-binary <AARDVARK_BINARY>
#
#
# Changing the network backend in /etc/containers/containers.conf to
# [network]
# network_backend = "cni"
#
# Also doesn't seem to help, as can-grid-00 wants for some reason to try to bring up eth1
#
#
# Maybe also related to this? https://github.com/k8snetworkplumbingwg/multus-cni/issues/542

version: "3.8"
services:
  solar-charger-emerson:
    # To build from source, replace 'image: xxxxxxxxxxx' with 'build: .'
    # build: .
    image: localhost/solar-charger-emerson:latest

    # Always pull the image
    #pull_policy: always

    # Define container image
    container_name: solar-charger-emerson

    # Run in privileged mode
    # This is required since the container is interacting (bringing down, bringing up and reconfiguring network interfaces)
    privileged: false

    # Volume mounts
    volumes:
      # Configuration Files
      - ./config/battery-charger.yml:/opt/app/conf/battery-charger.yml:ro

      # CAN USB Adapters mounted as volumes
      #- /dev/usb-grid-00:
      #- /dev/usb-grid-01:

    # Devices access
#    devices:
#    # It is sufficient (with Debian Bookworm Image at least) to only pass-through the required devices
#      - /dev/usb-grid-00:/dev/usb-grid-00
#      - /dev/usb-grid-01:/dev/usb-grid-01
#      - '/dev:/dev'

    # Map the following ports to provide outside access (hostport:containerport)
    ports:
      - 5000:5000

    # Specify podman/docker network to use
    networks:
      - podman # Network used for IP Communication
      - can-grid-00 # Add one line for each custom network that maps the network interfaces using host_device
      #- can-grid-01 # Add one line for each custom network that maps the network interfaces using host_device

    # Set networm to host mode
#    network_mode: host

    # Set any environmental variables
    environment:
#      - NODE_ENV=production

    # Specify your user ID and group ID. You can find this by running `id -u` and `id -g`
    #  - UID=1000
    #  - GID=1000

    # Podman Rootless (https://www.redhat.com/sysadmin/files-devices-podman)
    group_add:
      - keep-groups

    # Specify Capabilities
    # Network access (including CANbus) requires additional permissions
    capabilities: {CAP_NET_ADMIN,CAP_NET_RAW,CAP_NET_BIND_SERVICE}

    # Security Options for Docker
    security_opt:
      - no-new-privileges:true # !!! No space between no-new-privileges:<value> otherwise this will make podman-compose up -d fail !!!

    # Specify restart policy
    restart: unless-stopped
    # Configure healthchecks
    #healthcheck:
    #  test: ['CMD', 'node', '/app/services/healthcheck']
    #  interval: 1m30s
    #  timeout: 10s
    #  retries: 3
    #  start_period: 40s

# Define all networks to be used for this container
networks:
  # Network used for IP Communication
  podman:
    external: true
  # Add one line for each custom network that maps the network interfaces using host_device
  can-grid-00:
    external: true
  #can-grid-01:
  #  external: true

